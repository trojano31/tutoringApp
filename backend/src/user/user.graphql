type Query {
  users(paginationInput: PaginationInput!): UserList,
  user(id: uuid!): User
  cities(paginationInput: PaginationInput!): CityList
}

type Mutation {
  createUser(user: UserInput!): User
}

type User {
  id: uuid
  email: String
  firstName: String
  lastName: String
  phone: String
  city: City
}

type UserList{
  result: [User]
  count: Int!
  hasNext: Boolean!
  hasPrev: Boolean!
}

type City {
  id: uuid!
  name: String!
}

type CityList{
  result: [City]
  count: Int!
  hasNext: Boolean!
  hasPrev: Boolean!
}

input UserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phoneNumber: String
  city: String
}

scalar uuid
